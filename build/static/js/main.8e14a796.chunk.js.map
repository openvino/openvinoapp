{"version":3,"sources":["assets/images/loading.gif","services/auth.service.js","assets/images/website-logo.png","eth/signer.js","components/NewExperience.js","services/qr.service.js","services/auth-header.js","services/experience.service.js","i18n.js","components/Login.js","components/Register.js","services/user.service.js","components/Home.js","components/Profile.js","eth/forwader.js","eth/mintNFT.js","eth/Ydiyoi.js","eth/provider.js","Web3Client.js","components/UserBoard.js","components/ModBoard.js","components/AdminBoard.js","components/EditProfile.js","components/SingleExperience.js","components/ForgotPassword.js","components/UpdatePassword.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dotenv","config","API_URL","process","AuthService","email","password","axios","post","response","data","loginResponse","token","localStorage","setItem","JSON","stringify","user","removeItem","userId","firstName","lastName","address","birthDate","telegramId","walletAddress","birthday","Date","patch","id","address_1","headers","authHeader","then","console","log","catch","error","resetkey","confirmPassword","put","address_2","roleId","statusId","parse","getItem","ethSigUtil","require","EIP712Domain","name","type","ForwardRequest","getMetaTxTypeData","chainId","verifyingContract","types","domain","version","primaryType","signTypedData","signer","from","a","privateKey","Buffer","replace","signTypedMessage","isHardhat","method","argData","send","buildRequest","forwarder","input","getNonce","nonce","toString","value","gas","buildTypedData","request","provider","getNetwork","n","typeData","message","signMetaTxRequest","toSign","signature","REACT_APP_API_KEY_SECRET","REACT_APP_API_KEY","acceptedImagesFormat","auth","client","create","host","port","protocol","authorization","required","className","role","i18next","t","NewExperience","props","handleChange","event","target","setState","handleSubmit","e","preventDefault","state","ipfsUrl","successful","form","validateAll","checkBtn","context","_errors","length","ExperienceService","addExperience","date","location","qrValue","photoFileName","status","experienceId","arrQuestions","getQuestions","push","question1","question2","question3","question4","question5","arrAnswers","answer1","answer2","answer3","answer4","answer5","saveQuestions","uno","dos","tres","cuatro","cinco","str","slice","description","image","toIPFS","file","add","added","url","path","ipfsUrlJson","updateJSON","history","window","reload","resMessage","onChangeFile","bind","latitude","longitude","qRCodeClaim","nftGenerated","redirect","userReady","currentUser","imgPlaceHolder","getCurrentUser","currentToken","getToken","qrCode","qrService","getQRClaimed","getallowClaim","this","navigator","geolocation","getCurrentPosition","success","coords","files","loading","imageType","fileType","split","pop","includes","placeHolderImg","warn","alert","to","onSubmit","ref","c","onChange","accept","validations","alt","src","width","htmlFor","disabled","style","display","Fragment","fontSize","fontWeight","color","lineHeight","marginTop","React","Component","withRouter","QrService","get","allowClaim","undefined","Authorization","pUserId","questions","answers","i18n","use","LanguageDetector","init","resources","en","translations","Login","Register","Email","Password","Birthdate","Nationality","es","fr","Tastings","Token","Actions","Profile","Update","cat","pr","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","handleLogin","onChangeEmail","onChangePassword","login","href","isEmail","vpassword","handleRegister","onChangeFirstName","onChangeLastName","onChangeAddress","onChangeBirthDate","onChangeTelegramId","onChangeWalletAddress","register","Home","content","checkQR","match","params","qrValid","UserService","getPublicContent","abi","inputs","stateMutability","components","internalType","outputs","createInstance","ethers","Contract","gasLessMint","contract","uri","Error","getAddress","interface","encodeFunctionData","fetch","body","registerMint","ethereum","requestPermissionAndRetry","userProvider","providers","Web3Provider","Number","switchToCorrectNetwork","getSigner","getBalance","enable","addNetwork","chainName","rpcUrls","NFTContractBuild","createProvider","JsonRpcProvider","selectedAccount","token_uri","isInitialized","REACT_APP_CONTRACT_ADDRESS","REACT_APP_NETWORK_TARGET_ID","accounts","err","on","Web3","mintToken","provider2","BoardUser","experiences","currentExperiences","minted","errorMessage","getExperiences","getUserBoard","index","finalURL","tx","updateExperience","listItems","map","item","key","wine","tabIndex","onClick","createCollectible","scope","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","EditProfile","handleUpdate","update","onChangeBirthday","onChangeTelegram","placeholder","SingleExperience","substring","substr","ForgotPassword","resetPassword","UpdatePassword","onChangeConfirmPassword","searchParams","search","URLSearchParams","reset","updatePassword","App","newlang","prevState","changeLanguage","logOut","redirectTimeout","showModeratorBoard","showAdminBoard","test","logout","lng","logo","username","exact","component","withTranslation","Boolean","hostname","ReactDOM","render","I18nextProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e14a796.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.f4404720.gif\";","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst { REACT_APP_API_URL: API_URL } = process.env;\r\n\r\n//const API_URL = \"http://143.198.152.77:4000\"\r\n//const API_URL = \"http://159.203.169.184:3000\"\r\n\r\nclass AuthService {\r\n  async login(email, password) {\r\n    const response = await axios.post(API_URL + \"/login\", {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    if (response.data.loginResponse.token) {\r\n      localStorage.setItem(\r\n        \"token\",\r\n        JSON.stringify(response.data.loginResponse.token)\r\n      );\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify(response.data.loginResponse.user)\r\n      );\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  async update(\r\n    userId,\r\n    firstName,\r\n    lastName,\r\n    address,\r\n    birthDate,\r\n    telegramId,\r\n    walletAddress\r\n  ) {\r\n    let birthday = new Date(birthDate);\r\n    const response = await axios\r\n      .patch(\r\n        API_URL + \"/users/\" + userId,\r\n        {\r\n          id: userId,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          telegramId: telegramId,\r\n          birthDate: birthday,\r\n          address_1: address,\r\n          walletAddress: walletAddress,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    //return response;\r\n  }\r\n\r\n  // update(firstName, lastName, address, birthDate, telegramId, walletAddress, userId) {\r\n\r\n  //   let birthday = new Date(birthDate);\r\n\r\n  //   return axios.patch(API_URL + \"/users/\" + userId, {\r\n  //     \"firstName\": firstName,\r\n  //     \"lastName\": lastName,\r\n  //     \"telegramId\": telegramId,\r\n  //     \"birthDate\": birthday,\r\n  //     \"address_1\": address,\r\n  //     \"walletAddress\": walletAddress,\r\n  //     \"roleId\": 1,\r\n  //     \"statusId\": 3,\r\n  //     \"resetKey\": \"string\"\r\n  //   }, {\r\n  //     headers: authHeader(),\r\n  //   });\r\n  // }\r\n\r\n  resetPassword(email) {\r\n    return axios.post(API_URL + \"/reset-password/init\", {\r\n      email: email,\r\n    });\r\n  }\r\n\r\n  updatePassword(resetkey, password, confirmPassword) {\r\n    return axios.put(API_URL + \"/reset-password/finish\", {\r\n      resetkey: resetkey,\r\n      password: password,\r\n      confirmPassword: confirmPassword,\r\n    });\r\n  }\r\n\r\n  register(\r\n    email,\r\n    password,\r\n    firstName,\r\n    lastName,\r\n    address,\r\n    birthDate,\r\n    telegramId,\r\n    walletAddress\r\n  ) {\r\n    let birthday = new Date(birthDate);\r\n\r\n    return axios.post(API_URL + \"/signup\", {\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      telegramId: telegramId,\r\n      birthDate: birthday,\r\n      email: email,\r\n      address_1: address,\r\n      address_2: \"\",\r\n      password: password,\r\n      walletAddress: walletAddress,\r\n      roleId: 1,\r\n      statusId: 3,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n\r\n  getToken() {\r\n    return JSON.parse(localStorage.getItem(\"token\"));\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","module.exports = __webpack_public_path__ + \"static/media/website-logo.3e59f293.png\";","const ethSigUtil = require(\"eth-sig-util\");\r\n\r\nconst EIP712Domain = [\r\n  { name: \"name\", type: \"string\" },\r\n  { name: \"version\", type: \"string\" },\r\n  { name: \"chainId\", type: \"uint256\" },\r\n  { name: \"verifyingContract\", type: \"address\" },\r\n];\r\n\r\nconst ForwardRequest = [\r\n  { name: \"from\", type: \"address\" },\r\n  { name: \"to\", type: \"address\" },\r\n  { name: \"value\", type: \"uint256\" },\r\n  { name: \"gas\", type: \"uint256\" },\r\n  { name: \"nonce\", type: \"uint256\" },\r\n  { name: \"data\", type: \"bytes\" },\r\n];\r\n\r\nfunction getMetaTxTypeData(chainId, verifyingContract) {\r\n  return {\r\n    types: {\r\n      EIP712Domain,\r\n      ForwardRequest,\r\n    },\r\n    domain: {\r\n      name: \"MinimalForwarder\",\r\n      version: \"0.0.1\",\r\n      chainId,\r\n      verifyingContract,\r\n    },\r\n    primaryType: \"ForwardRequest\",\r\n  };\r\n}\r\n\r\nasync function signTypedData(signer, from, data) {\r\n  // If signer is a private key, use it to sign\r\n  if (typeof signer === \"string\") {\r\n    const privateKey = Buffer.from(signer.replace(/^0x/, \"\"), \"hex\");\r\n    return ethSigUtil.signTypedMessage(privateKey, { data });\r\n  }\r\n\r\n  // Otherwise, send the signTypedData RPC call\r\n  // Note that hardhatvm and metamask require different EIP712 input\r\n  const isHardhat = data.domain.chainId == 31337;\r\n  const [method, argData] = isHardhat\r\n    ? [\"eth_signTypedData\", data]\r\n    : [\"eth_signTypedData_v4\", JSON.stringify(data)];\r\n  return await signer.send(method, [from, argData]);\r\n}\r\n\r\nasync function buildRequest(forwarder, input) {\r\n  const nonce = await forwarder\r\n    .getNonce(input.from)\r\n    .then((nonce) => nonce.toString());\r\n  return { value: 0, gas: 1e6, nonce, ...input };\r\n}\r\n\r\nasync function buildTypedData(forwarder, request) {\r\n  const chainId = await forwarder.provider.getNetwork().then((n) => n.chainId);\r\n  const typeData = getMetaTxTypeData(chainId, forwarder.address);\r\n  return { ...typeData, message: request };\r\n}\r\n\r\nexport async function signMetaTxRequest(signer, forwarder, input) {\r\n  const request = await buildRequest(forwarder, input);\r\n  const toSign = await buildTypedData(forwarder, request);\r\n  const signature = await signTypedData(signer, input.from, toSign);\r\n  return { signature, request };\r\n}\r\n","import React from \"react\";\r\nimport ExperienceService from \"../services/experience.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport qrService from \"../services/qr.service\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { create } from \"ipfs-http-client\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport TextArea from \"react-validation/build/textarea\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport i18next from \"i18next\";\r\nimport loading from \"../assets/images/loading.gif\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst { REACT_APP_API_KEY_SECRET, REACT_APP_API_KEY } = process.env;\r\n\r\n// Accepted Images file types\r\nconst acceptedImagesFormat = [\"jpeg\", \"png\", \"heic\", \"jpg\"];\r\n\r\n/* Create an instance of the client */\r\nconst auth =\r\n  \"Basic \" +\r\n  Buffer.from(REACT_APP_API_KEY + \":\" + REACT_APP_API_KEY_SECRET).toString(\r\n    \"base64\"\r\n  );\r\nconst client = create({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  protocol: \"https\",\r\n  headers: {\r\n    authorization: auth,\r\n  },\r\n});\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"This field is required!\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// const qrCode = (value) => {\r\n//   if (value === false) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         Invalid QR Code.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\nclass NewExperience extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeFile = this.onChangeFile.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      ipfsUrl: \"\",\r\n      ipfsUrlJson: \"\",\r\n      qrValue: \"\",\r\n      photoFileName: \"\",\r\n      statusId: 5,\r\n      location: \"\",\r\n      userId: \"\",\r\n      date: \"\",\r\n      latitude: null,\r\n      longitude: null,\r\n      experienceId: \"\",\r\n      qRCodeClaim: \"\",\r\n      nftGenerated: false,\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { email: \"\" },\r\n      imgPlaceHolder: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //const questions = ExperienceService.getQuestions(1);\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    const qrCode = qrService.getQRClaimed();\r\n    const qRCodeClaim = qrService.getallowClaim();\r\n    if (!currentUser) {\r\n      this.setState({ redirect: \"/\" });\r\n    } else {\r\n      this.setState({ userId: currentUser.id });\r\n    }\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n    this.setState({ qrValue: qrCode });\r\n    this.setState({ qRCodeClaim: qRCodeClaim });\r\n    this.setState({ date: new Date() });\r\n    this.setState({ location: \"Mendoza\" });\r\n    //console.log(currentToken);\r\n    //console.log(currentUser);\r\n    //console.log(currentUser.id);\r\n    //console.log(qrCode);\r\n    //console.log(questions);\r\n    window.navigator.geolocation.getCurrentPosition((success) =>\r\n      this.setState({\r\n        latitude: success.coords.latitude,\r\n        longitude: success.coords.longitude,\r\n      })\r\n    );\r\n  }\r\n\r\n  async onChangeFile(e) {\r\n    console.log(e.target.files[0]);\r\n    const file = e.target.files[0];\r\n    this.setState({\r\n      photoFileName: loading,\r\n    });\r\n    let imageType = file.name.toString();\r\n    var fileType = imageType.split(\".\").pop();\r\n    console.log(\"Image extension\", `\"${fileType}\"`);\r\n\r\n    if (JSON.stringify(acceptedImagesFormat).includes(`\"${fileType}\"`)) {\r\n      console.log(\"Image type supported!!\");\r\n      // Do some Shit.\r\n      try {\r\n        const added = await client.add(file);\r\n        const url = `https://ipfs.infura.io/ipfs/${added.path}`;\r\n        const placeHolderImg = `https://ipfs.io/ipfs/${added.path}`;\r\n        console.log(\"Trying IPFS upload...\");\r\n        if (url === \"https://ipfs.infura.io/ipfs/Users\") {\r\n          console.warn(\"Error uploading to IPFS.\");\r\n          alert(\"Failed to uplaod to IPFS, try again!!\");\r\n          window.location.reload();\r\n          // this.setState({\r\n          //   photoFileName: null\r\n          // });\r\n        } else {\r\n          console.log(\"Success uploading to IPFS!!\");\r\n          this.setState({\r\n            photoFileName: url,\r\n          });\r\n\r\n          this.setState({\r\n            imgPlaceHolder: placeHolderImg,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error uploading file: \", error);\r\n      }\r\n    } else {\r\n      // Break the instance, alert user that image/type is not supported.\r\n      console.warn(\"Image type not supported...\");\r\n      alert(\"Image type not supported.\");\r\n      this.setState({\r\n        photoFileName: null,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.ipfsUrl);\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    // grabación de la experiencia y de las respuesta\r\n    // la busqueda de las preguntas no debería ir acá\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      ExperienceService.addExperience(\r\n        this.state.statusId,\r\n        this.state.date,\r\n        this.state.userId,\r\n        this.state.location,\r\n        this.state.qrValue,\r\n        this.state.photoFileName,\r\n        this.state.ipfsUrl\r\n      ).then(\r\n        async (response) => {\r\n          //valido el status de la respuesta para saber si la experiencia se grabó correctamente\r\n          if (response.data.status) {\r\n            // la experiencia se grabó exitosamente\r\n            this.setState({\r\n              message: response.data.message,\r\n              experienceId: response.data.experienceId,\r\n              successful: true,\r\n            });\r\n            // grabar respuestas\r\n            // *** prueba obtener pregutas, esto no debería estar acà, las preguntas\r\n            // debería buscarlas antes para mostrarlas en la interface ***\r\n            // la grabación esta dentro de la búsqueda solo para que se realicen en ese orden sincrónico\r\n            let arrQuestions = [];\r\n            ExperienceService.getQuestions().then(\r\n              async (response) => {\r\n                // transformo el json a un array\r\n                arrQuestions.push(response.data[0].question1);\r\n                arrQuestions.push(response.data[0].question2);\r\n                arrQuestions.push(response.data[0].question3);\r\n                arrQuestions.push(response.data[0].question4);\r\n                arrQuestions.push(response.data[0].question5);\r\n\r\n                // *** prueba grabar preguntas ***\r\n                // armo un array con las respuetas y paso ambos array para grabar\r\n                const arrAnswers = [\r\n                  this.state.answer1,\r\n                  this.state.answer2,\r\n                  this.state.answer3,\r\n                  this.state.answer4,\r\n                  this.state.answer5,\r\n                ];\r\n                ExperienceService.saveQuestions(\r\n                  this.state.experienceId,\r\n                  arrQuestions,\r\n                  arrAnswers\r\n                );\r\n                localStorage.removeItem(\"qrCodeT\");\r\n                localStorage.removeItem(\"allowClaim\");\r\n\r\n                let uno =\r\n                  \"-\" +\r\n                  \"**Are you sharing this bottle with other people? How many?** \" +\r\n                  `${this.state.answer1} `;\r\n                let dos =\r\n                  \"-\" +\r\n                  \"**Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?** \" +\r\n                  `${this.state.answer2} `;\r\n                let tres =\r\n                  \"-\" +\r\n                  \"**Are you drinking this wine with food? What are you eating?** \" +\r\n                  `${this.state.answer3} `;\r\n                let cuatro =\r\n                  \"-\" +\r\n                  \"**Do you like this wine? How would you rank it?** \" +\r\n                  `${this.state.answer4} `;\r\n                let cinco =\r\n                  \"-\" +\r\n                  \"**Do you think we should build a colony on Mars?** \" +\r\n                  `${this.state.answer5} `;\r\n                let str = this.state.qrValue;\r\n                let state = {\r\n                  name: str.slice(0, str.length - 6),\r\n                  description:\r\n                    uno +\r\n                    `\\n\\n` +\r\n                    dos +\r\n                    `\\n\\n` +\r\n                    tres +\r\n                    `\\n\\n` +\r\n                    cuatro +\r\n                    `\\n\\n` +\r\n                    cinco,\r\n                  image: this.state.photoFileName,\r\n                };\r\n                console.log(state);\r\n                const toIPFS = JSON.stringify(state);\r\n                this.setState({\r\n                  ipfsUrl: toIPFS,\r\n                });\r\n                console.log(this.state.ipfsUrl);\r\n                const file = this.state.ipfsUrl;\r\n                try {\r\n                  const added = await client.add(file);\r\n                  const url = `https://ipfs.infura.io/ipfs/${added.path}`;\r\n                  this.setState({\r\n                    ipfsUrlJson: url,\r\n                  });\r\n                  console.log(this.state.ipfsUrlJson);\r\n                  ExperienceService.updateJSON(\r\n                    this.state.experienceId,\r\n                    this.state.ipfsUrlJson\r\n                  );\r\n                  this.props.history.push(\"/app/user\");\r\n                  window.location(\"/app/user\");\r\n\r\n                  window.location.reload();\r\n                } catch (error) {\r\n                  console.log(\"Error uploading file: \", error);\r\n                }\r\n              },\r\n              (error) => {\r\n                console.log(error.toString());\r\n              }\r\n            );\r\n          } else {\r\n            // *** la experiencia no se grabó, no avanzar en la ejecución  ***\r\n            this.setState({\r\n              message: response.data.message,\r\n              experienceId: 0,\r\n              successful: false,\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n    if (this.state.qRCodeClaim === true) {\r\n      return (\r\n        <Form\r\n          onSubmit={this.handleSubmit}\r\n          ref={(c) => {\r\n            this.form = c;\r\n          }}\r\n        >\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-container login-form\">\r\n              <h1>{i18next.t(\"Add New Tasting\")}</h1>\r\n              <div className=\"form-group\">\r\n                <label className=\"cameraButton\">\r\n                  <i className=\"fas fa-camera-retro\"></i>{\" \"}\r\n                  {i18next.t(\"Take a picture\")}\r\n                  <Input\r\n                    type=\"file\"\r\n                    onChange={this.onChangeFile}\r\n                    accept=\"image/*;capture=camera\"\r\n                    validations={[required]}\r\n                  />\r\n                </label>\r\n                {this.state.imgPlaceHolder && (\r\n                  <img\r\n                    alt=\"ipfs-url\"\r\n                    src={this.state.imgPlaceHolder}\r\n                    width=\"370px\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                  {i18next.t(\r\n                    \"Are you sharing this bottle with other people? How many?\"\r\n                  )}\r\n                </label>\r\n                <TextArea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"answer1\"\r\n                  value={this.state.answer1}\r\n                  onChange={this.handleChange}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                  {i18next.t(\r\n                    \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\"\r\n                  )}\r\n                </label>\r\n                <TextArea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"answer2\"\r\n                  value={this.state.answer2}\r\n                  onChange={this.handleChange}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                  {i18next.t(\r\n                    \"Are you drinking this wine with food? What are you eating?\"\r\n                  )}\r\n                </label>\r\n                <TextArea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"answer3\"\r\n                  value={this.state.answer3}\r\n                  onChange={this.handleChange}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                  {i18next.t(\"Do you like this wine? How would you rank it?\")}\r\n                </label>\r\n                <TextArea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"answer4\"\r\n                  value={this.state.answer4}\r\n                  onChange={this.handleChange}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                  {i18next.t(\"Do you think we should build a colony on Mars?\")}\r\n                </label>\r\n                <TextArea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"answer5\"\r\n                  value={this.state.answer5}\r\n                  onChange={this.handleChange}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"form-group\"></div>\r\n                <button\r\n                  className=\"btn btn-primary btn-block\"\r\n                  disabled={\r\n                    this.state.photoFileName === loading || this.state.loading\r\n                  }\r\n                >\r\n                  {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>{i18next.t(\"Register Tasting\")}</span>\r\n                </button>\r\n              </div>\r\n\r\n              {this.state.message && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  this.checkBtn = c;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card card-container login-form\">\r\n              <h1\r\n                style={{\r\n                  fontSize: \"35px\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"#840c4a\",\r\n                  lineHeight: \"33px\",\r\n                }}\r\n              >\r\n                {i18next.t(\"SCAN YOUR QR CODE\")}\r\n              </h1>\r\n              <p\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                {i18next.t(\r\n                  \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\"\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default withRouter(NewExperience);\r\n","import axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst { REACT_APP_API_URL: API_URL } = process.env;\r\n\r\n\r\nclass QrService {\r\n  async checkQR(qrValue) {\r\n    return axios.get(API_URL + \"/qrstatus/\" + qrValue).then((response) => {\r\n      localStorage.setItem(\r\n        \"allowClaim\",\r\n        JSON.stringify(response.data.allowClaim)\r\n      );\r\n      if (qrValue !== undefined) {\r\n        localStorage.setItem(\"qrCodeT\", JSON.stringify(qrValue));\r\n      }\r\n      return response.data.allowClaim;\r\n    });\r\n  }\r\n\r\n  getallowClaim() {\r\n    return JSON.parse(localStorage.getItem(\"allowClaim\"));\r\n  }\r\n\r\n  getQRClaimed() {\r\n    return JSON.parse(localStorage.getItem(\"qrCodeT\"));\r\n  }\r\n}\r\n\r\nexport default new QrService();\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n\r\n  if (user && token) {\r\n    //console.log(\"token \" + token);\r\n    return { Authorization: 'Bearer ' + token };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst { REACT_APP_API_URL: API_URL } = process.env;\r\n\r\n\r\nclass ExperienceService {\r\n  // /users/{id}/experiencesdetail\r\n  async getExperiences(pUserId) {\r\n    const response = await axios.get(\r\n      API_URL + \"/users/\" + pUserId + \"/experiencesdetail\",\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n    return response;\r\n  }\r\n\r\n  async updateJSON(experienceId, ipfsUrl) {\r\n    const response = await axios\r\n      .patch(\r\n        API_URL + \"/experiences/\" + experienceId,\r\n        {\r\n          id: experienceId,\r\n          ipfsUrl: ipfsUrl,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // return response;\r\n  }\r\n\r\n  async addExperience(\r\n    statusId,\r\n    date,\r\n    userId,\r\n    location,\r\n    qrValue,\r\n    photoFileName\r\n  ) {\r\n    const response = await axios.post(\r\n      API_URL + \"/experiences\",\r\n      {\r\n        date: date,\r\n        location: location,\r\n        statusId: statusId,\r\n        qrValue: qrValue,\r\n        photoFileName: photoFileName, //\"https://ipfs.io/ipfs/QmbcKQTe44AYBrfhUypuUapCaQUQAHbWiqGufhR7eoCpwU\"\r\n        nftGenerated: false,\r\n        userId: userId,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n\r\n    // response ok : { \"status\" : true , \"message\" : \"Nueva experiencia creada: 1\", \"experienceId\" : 1 }\r\n    // responose error: { \"status\" : false , \"message\" : \"El QRValue no es válido\", \"experienceId\" : 0 }\r\n    return response;\r\n  }\r\n\r\n  async updateExperience(experienceId, nftGenerated, userId) {\r\n    const response = await axios\r\n      .patch(\r\n        API_URL + \"/experiences/\" + experienceId,\r\n        {\r\n          id: experienceId,\r\n          nftGenerated: JSON.parse(nftGenerated),\r\n          userId: userId,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // return response;\r\n  }\r\n\r\n  // returns an array only with the active questions\r\n  async getQuestions() {\r\n    const response = await axios.get(API_URL + \"/survey-questions\", {\r\n      headers: authHeader(),\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  // recieves array of questions & answers\r\n  async saveQuestions(experienceId, questions, answers) {\r\n    const response = await axios.post(\r\n      API_URL + \"/experiences/\" + experienceId + \"/experience-survey\",\r\n      {\r\n        question1: questions[0],\r\n        answer1: answers[0],\r\n        question2: questions[1],\r\n        answer2: answers[1],\r\n        question3: questions[2],\r\n        answer3: answers[2],\r\n        question4: questions[3],\r\n        answer4: answers[3],\r\n        question5: questions[4],\r\n        answer5: answers[4],\r\n        experienceId: experienceId,\r\n      },\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default new ExperienceService();\r\n","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  // we init with resources\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        \"Coming Soon\": \"Coming Soon\",\r\n        Login: \"Login\",\r\n        Register: \"Register\",\r\n        \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\r\n        Email: \"Email\",\r\n        Password: \"Password\",\r\n        \"Forgot Password?\": \"Forgot Password?\",\r\n        \"This field is required!\": \"This field is required!\",\r\n        \"Register to continue!\": \"Register to continue!\",\r\n        \"Fist Name\": \"Fist Name\",\r\n        \"Last Name\": \"Last Name\",\r\n        \"Mailing Address\": \"Mailing Address\",\r\n        Birthdate: \"Birthdate\",\r\n        \"Telgram ID\": \"Telegram ID\",\r\n        \"DNI/Password\": \"DNI/Passport\",\r\n        Nationality: \"Nationality\",\r\n        \"Select a country\": \"Select a country\",\r\n        Email: \"Email\",\r\n        Password: \"Password\",\r\n        \"SCAN YOUR QR CODE\": \"SCAN YOUR QR CODE\",\r\n        \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\r\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\",\r\n        Tastings: \"Tastings\",\r\n        \"New Tasting\": \"New Tasting\",\r\n        Date: \"Date\",\r\n        Token: \"Token\",\r\n        \"Token ID\": \"Token ID\",\r\n        Actions: \"Actions\",\r\n        \"Mint NFT\": \"Mint NFT\",\r\n        \"NFT Minted Succesfully!\": \"NFT Minted Succesfully!\",\r\n        Profile: \"Profile\",\r\n        \"Edit Profile\": \"Edit Profile\",\r\n        Update: \"Update\",\r\n        \"Back to Profile\": \"Back to Profile\",\r\n        \"This is not a valid email.\": \"This is not a valid email.\",\r\n        \"Invalid QR Code.\": \"Invalid QR Code.\",\r\n        \"The password must be between 6 and 40 characters.\": \"The password must be between 6 and 40 characters.\",\r\n        \"Not Specified\": \"Not Specified\",\r\n        \"Reset your password\": \"Reset your password\",\r\n        \"Reset password\": \"Reset password\",\r\n        \"Add New Tasting\": \"Add New Tasting\",\r\n        \"Take a picture\": \"Take a picture\",\r\n        \"Are you sharing this bottle with other people? How many?\": \"Are you sharing this bottle with other people? How many?\",\r\n        \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\",\r\n        \"Are you drinking this wine with food? What are you eating?\": \"Are you drinking this wine with food? What are you eating?\",\r\n        \"Do you like this wine? How would you rank it?\": \"Do you like this wine? How would you rank it?\",\r\n        \"Do you think we should build a colony on Mars?\": \"Do you think we should build a colony on Mars?\",\r\n        \"Register Tasting\": \"Register Tasting\",\r\n        \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\",\r\n        \r\n      },\r\n    },\r\n    es: {\r\n      translations: {\r\n        \"Coming Soon\": \"Proximamente\",\r\n        Login: \"Iniciar Sesión\",\r\n        Register: \"Registro\",\r\n        \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\r\n        Email: \"Correo Electrónico\",\r\n        Password: \"Contraseña\",\r\n        \"Forgot Password?\": \"Perdiste tu contraseña?\",\r\n        \"This field is required!\": \"Este campo es requerido\",\r\n        \"Register to continue!\": \"Registrate para continuar!\",\r\n        \"First Name\": \"Nombre\",\r\n        \"Last Name\": \"Apellido\",\r\n        \"Mailing Address\": \"Domicilio donde reside\",\r\n        Birthdate: \"Cumpleaños\",\r\n        \"Telegram ID\": \"ID de Telegram\",\r\n        \"DNI/Passport\": \"DNI/Pasaporte\",\r\n        Nationality: \"Nacionalidad\",\r\n        \"Select a country\": \"Seleccionar País\",\r\n        Email: \"Correo Electrónico\",\r\n        Password: \"Contraseña\",\r\n        \"SCAN YOUR QR CODE\": \"ESCANEA EL QR\",\r\n        \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\r\n          \"Primero, escanea el QR que se encuentra en el reverso de la botella\",\r\n        Tastings: \"Degustaciones\",\r\n        \"New Tasting\": \"Nueva Degustación\",\r\n        Date: \"Fecha\",\r\n        Token: \"Token\",\r\n        \"Token ID\": \"ID Token\",\r\n        Actions: \"Acciones\",\r\n        \"Mint NFT\": \"Mint NFT\",\r\n        \"NFT Minted Succesfully!\": \"NFT Minted exitosamente!\",\r\n        Profile: \"Profile\",\r\n        \"Edit Profile\": \"Editar Perfil\",\r\n        Update: \"Actualizar\",\r\n        \"Back to Profile\": \"Volver al Perfil\",\r\n        \"This is not a valid email.\": \"Tu correo electrónico no es válido\",\r\n        \"Invalid QR Code.\": \"Código QR inválido\",\r\n        \"The password must be between 6 and 40 characters.\": \"La contraseña debe contener entre 6 y 40 caracteres\",\r\n        \"Not Specified\": \"Sin Especificar\",\r\n        \"Reset your password\": \"Restablecer contraseña\",\r\n        \"Reset password\": \"Restablecer contraseña\",\r\n        \"Add New Tasting\": \"Registrar nueva degustación\",\r\n        \"Take a picture\": \"Toma una selfie con el vino\",\r\n        \"Are you sharing this bottle with other people? How many?\": \"¿Comparte esta botella con otras personas? ¿Con cuántos?\",\r\n        \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"¿Compraste esta botella con criptomonedas? o en una tienda o restaurante? ¿fue un regalo?\",\r\n        \"Are you drinking this wine with food? What are you eating?\": \"¿Estás bebiendo este vino con la comida? ¿Qué estás comiendo?\",\r\n        \"Do you like this wine? How would you rank it?\": \"¿Le gusta este vino? ¿Cómo lo calificaría?\",\r\n        \"Do you think we should build a colony on Mars?\": \"¿Cree que deberíamos construir una colonia en Marte?\",\r\n        \"Register Tasting\": \"Registrar Degustación\",\r\n        \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"El minting está actualmente disponible sólo en la red principal de ETH. Compruebe su red en Metamask\",\r\n        \"No wallet\" : \"No se encuentra ninguna billetera. Por favor instala una billetera para poder realizar el Mint\"\r\n\r\n      },\r\n    },\r\n    fr: {\r\n        translations: {\r\n          \"Coming Soon\": \"À venir\",\r\n          Login: \"Iniciar Sesión\",\r\n          Register: \"Registre\",\r\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\r\n          Email: \"Courriel\",\r\n          Password: \"Mot de passe\",\r\n          \"Forgot Password?\": \"Mot de passe oublié ?\",\r\n          \"This field is required!\": \"Ce champ est obligatoire !\",\r\n          \"Register to continue!\": \"Inscrivez-vous pour continuer !\",\r\n          \"First Name\": \"Prénom\",\r\n          \"Last Name\": \"Dernier nom\",\r\n          \"Mailing Address\": \"Adresse postale\",\r\n          Birthdate: \"Date de naissance\",\r\n          \"Telegram ID\": \"ID de Telegram\",\r\n          \"DNI/Passport\": \"DNI/Passeport\",\r\n          Nationality: \"Nationalité\",\r\n          \"Select a country\": \"Sélectionnez un pays\",\r\n          \"SCAN YOUR QR CODE\": \"SCANNEZ VOTRE QR\",\r\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\r\n            \"Tout d'abord, vous devez scanner le code QR qui se trouve au dos de votre bouteille de vin.\",\r\n          Tastings: \"Dégustations\",\r\n          \"New Tasting\": \"Nouvelle Dégustation\",\r\n          Date: \"Date\",\r\n          Token: \"Token\",\r\n          \"Token ID\": \"Token ID\",\r\n          Actions: \"Actions\",\r\n          \"Mint NFT\": \"Mint NFT\",\r\n          \"NFT Minted Succesfully!\": \"La NFT a réussi son pari !\",\r\n          Profile: \"Profil\",\r\n          \"Edit Profile\": \"Modifier le profil\",\r\n          Update: \"Mise à jour\",\r\n          \"Back to Profile\": \"Retour au profil\",\r\n          \"This is not a valid email.\": \"Ce n'est pas un email valide.\",\r\n          \"Invalid QR Code.\": \"Code QR non valide.\",\r\n          \"The password must be between 6 and 40 characters.\": \"Le mot de passe doit comporter entre 6 et 40 caractères.\",\r\n          \"Not Specified\": \"Non spécifié\",\r\n          \"Reset your password\": \"Réinitialiser votre mot de passe\",\r\n          \"Reset password\": \"Réinitialiser le mot de passe\",\r\n          \"Add New Tasting\": \"Ajouter une nouvelle dégustation\",\r\n          \"Take a picture\": \"Prenez une photo\",\r\n          \"Are you sharing this bottle with other people? How many?\": \"Partagez-vous cette bouteille avec d'autres personnes ? Combien de personnes ?\",\r\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Avez-vous acheté cette bouteille avec de la crypto ? ou dans un magasin ou un restaurant ? était-ce un cadeau ?\",\r\n          \"Are you drinking this wine with food? What are you eating?\": \"Buvez-vous ce vin avec de la nourriture ? Qu'est-ce que vous mangez ?\",\r\n          \"Do you like this wine? How would you rank it?\": \"Aimez-vous ce vin ? Comment le classeriez-vous ?\",\r\n          \"Do you think we should build a colony on Mars?\": \"Pensez-vous que nous devrions construire une colonie sur Mars ?\",\r\n          \"Register Tasting\": \"Enregistrer la dégustation\",\r\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"Le monnayage est actuellement disponible uniquement sur le Mainnet ETH. Vérifiez votre réseau sur Metamask\"\r\n  \r\n        },\r\n      },\r\n      cat: {\r\n        translations: {\r\n          \"Coming Soon\": \"Aviat\",\r\n          Login: \"Connexió\",\r\n          Register: \"Registrar\",\r\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\r\n          Email: \"Correu electrònic\",\r\n          Password: \"Contrasenya\",\r\n          \"Forgot Password?\": \"Heu oblidat la contrasenya?\",\r\n          \"This field is required!\": \"Aquest camp és necessari!\",\r\n          \"Register to continue!\": \"Registra't per continuar!\",\r\n          \"First Name\": \"Nom\",\r\n          \"Last Name\": \"Cognoms\",\r\n          \"Mailing Address\": \"Adreça postal\",\r\n          Birthdate: \"Data de naixement\",\r\n          \"Telegram ID\": \"Telegram ID\",\r\n          \"DNI/Passport\": \"DNI/Passaport\",\r\n          Nationality: \"Nacionalitat\",\r\n          \"Select a country\": \"Seleccioneu un país\",\r\n          \"SCAN YOUR QR CODE\": \"ESCANEJA EL TEU QR\",\r\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\r\n            \"En primer lloc, heu d'escanejar el codi QR que hi ha al revers de la vostra ampolla de vi.\",\r\n          Tastings: \"Degustacions\",\r\n          \"New Tasting\": \"Nou Tast\",\r\n          Date: \"Datar\",\r\n          Token: \"Token\",\r\n          \"Token ID\": \"Token ID\",\r\n          Actions: \"Accions\",\r\n          \"Mint NFT\": \"Mint NFT\",\r\n          \"NFT Minted Succesfully!\": \"NFT encunyat amb èxit!\",\r\n          Profile: \"Perfil\",\r\n          \"Edit Profile\": \"Edita el perfil\",\r\n          Update: \"Actualitzar\",\r\n          \"Back to Profile\": \"Torna al perfil\",\r\n          \"This is not a valid email.\": \"Aquest correu electrònic no és vàlid.\",\r\n          \"Invalid QR Code.\": \"El codi QR no és vàlid.\",\r\n          \"The password must be between 6 and 40 characters.\": \"La contrasenya ha de tenir entre 6 i 40 caràcters.\",\r\n          \"Not Specified\": \"No s'ha especificat\",\r\n          \"Reset your password\": \"Reinicialitza la contrasenya\",\r\n          \"Reset password\": \"Reinicialitza la contrasenya\",\r\n          \"Add New Tasting\": \"Afegeix un tast nou\",\r\n          \"Take a picture\": \"Fes una foto\",\r\n          \"Are you sharing this bottle with other people? How many?\": \"Comparteixes aquesta ampolla amb altres persones? Quant?\",\r\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Has comprat aquesta ampolla amb criptografia? O en una botiga o restaurant? Va ser un regal?\",\r\n          \"Are you drinking this wine with food? What are you eating?\": \"Estàs bevent aquest vi amb menjar? Què estàs menjant?\",\r\n          \"Do you like this wine? How would you rank it?\": \"T'agrada aquest vi? Com ho classificaries?\",\r\n          \"Do you think we should build a colony on Mars?\": \"Creus que hauríem de construir una colònia a Mart?\",\r\n          \"Register Tasting\": \"Registre Degustació\",\r\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"L'encunyació només està disponible a ETH Mainnet. Comproveu la xarxa a Metamask\"\r\n  \r\n        },\r\n      },\r\n      pr: {\r\n        translations: {\r\n          \"Coming Soon\": \"Brevemente\",\r\n          Login: \"Entrar\",\r\n          Register: \"Registe-se\",\r\n          \"You Drink it, You Own it!\": \"You Drink it, You Own it!\",\r\n          Email: \"Correu electrònic\",\r\n          Password: \"Senha\",\r\n          \"Forgot Password?\": \"Esqueceu-se da senha?\",\r\n          \"This field is required!\": \"Este campo é obrigatório!\",\r\n          \"Register to continue!\": \"Registe-se para continuar!\",\r\n          \"First Name\": \"Primeiro nome\",\r\n          \"Last Name\": \"Sobrenome\",\r\n          \"Mailing Address\": \"Endereço de correio\",\r\n          Birthdate: \"Data de nascimento\",\r\n          \"Telegram ID\": \"Telegram ID\",\r\n          \"DNI/Passport\": \"DNI/Passaporte\",\r\n          Nationality: \"Nacionalidade\",\r\n          \"Select a country\": \"Seleccione um país\",\r\n          \"SCAN YOUR QR CODE\": \"DIGITALIZE O SEU QR\",\r\n          \"First, you have to scan the QR Code that is in the reverse of your wine bottle.\":\r\n            \"Primeiro, tem de digitalizar o Código QR que se encontra no verso da sua garrafa de vinho.\",\r\n          Tastings: \"Provas\",\r\n          \"New Tasting\": \"Nova Degustação\",\r\n          Date: \"Data\",\r\n          Token: \"Token\",\r\n          \"Token ID\": \"Token ID\",\r\n          Actions: \"Acções\",\r\n          \"Mint NFT\": \"Mint NFT\",\r\n          \"NFT Minted Succesfully!\": \"NFT Minado com Sucesso!\",\r\n          Profile: \"Perfil\",\r\n          \"Edit Profile\": \"Editar Perfil\",\r\n          Update: \"Actualização\",\r\n          \"Back to Profile\": \"Voltar ao Perfil\",\r\n          \"This is not a valid email.\": \"Este não é um e-mail válido..\",\r\n          \"Invalid QR Code.\": \"Código QR inválido.\",\r\n          \"The password must be between 6 and 40 characters.\": \"A palavra-passe deve ter entre 6 e 40 caracteres.\",\r\n          \"Not Specified\": \"Não Especificado\",\r\n          \"Reset your password\": \"Redefinir a sua palavra-passe\",\r\n          \"Reset password\": \"Redefinir a sua palavra-passe\",\r\n          \"Add New Tasting\": \"Adicionar nova degustação\",\r\n          \"Take a picture\": \"Tirar uma fotografia\",\r\n          \"Are you sharing this bottle with other people? How many?\": \"Está a partilhar esta garrafa com outras pessoas? Quantas?\",\r\n          \"Did you buy this bottle with crypto? or in a shop or restaurant? was it a gift?\": \"Comprou esta garrafa com criptografia? ou numa loja ou restaurante? foi um presente?\",\r\n          \"Are you drinking this wine with food? What are you eating?\": \"Está a beber este vinho com comida? O que estás a comer?\",\r\n          \"Do you like this wine? How would you rank it?\": \"Gosta deste vinho? Como o classificaria?\",\r\n          \"Do you think we should build a colony on Mars?\": \"Acha que devemos construir uma colónia em Marte?\",\r\n          \"Register Tasting\": \"Registrar Degustação\",\r\n          \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\": \"A cunhagem está actualmente disponível apenas na ETH Mainnet. Verifique a sua rede no Metamask\"\r\n  \r\n        },\r\n      },\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: true,\r\n\r\n  // have a common namespace used around the full app\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n\r\n  keySeparator: false, // we use content as keys\r\n\r\n  interpolation: {\r\n    escapeValue: false, // not needed for react!!\r\n    formatSeparator: \",\",\r\n  },\r\n\r\n  react: {\r\n    wait: true,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport qrService from \"../services/qr.service\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport i18next from \"i18next\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"This field is required!\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      currentUser: { email: \"\" },\r\n      userReady: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\r\n    //qrService.checkQR(this.props.match.params.id);\r\n    //console.log(qrValid);\r\n    //console.log(qrService.getallowClaim());\r\n    //console.log(qrService.getQRClaimed());\r\n    qrService.getallowClaim();\r\n    qrService.getQRClaimed();\r\n    //this.setState({ qrValue: qrValid});\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    if (!currentUser)\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n    \r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/app/add-tasting\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.error.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage ,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container login-form\">\r\n          <h1>\r\n          {i18next.t(\"You Drink it, You Own it!\")}\r\n\r\n            {/* <br />\r\n            <span className=\"subh1\">Sign in to continue!</span> */}\r\n          </h1>\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">{i18next.t(\"Password\")}</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n            <a href=\"/app/forgot-password\" style={{ color:\"#840c4a\"}}>{i18next.t(\"Forgot Password?\")}</a>\r\n            <div className=\"form-group\"><div className=\"form-group\"></div>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>{i18next.t(\"Login\")}</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport Select from \"react-validation/build/select\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport qrService from \"../services/qr.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport i18next from \"i18next\";\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n         {i18next.t(\"This field is required!\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"This is not a valid email.\")}       \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// const vusername = (value) => {\r\n//   if (value.length < 3 || value.length > 20) {\r\n//     return (\r\n//       <div className=\"alert alert-danger\" role=\"alert\">\r\n//         The username must be between 3 and 20 characters.\r\n//       </div>\r\n//     );\r\n//   }\r\n// };\r\n\r\n\r\nconst qrCode = (value) => {\r\n  if (value === false) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"Invalid QR Code.\")}\r\n      </div>\r\n    );\r\n  } else if (value === null) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"Kindly scan the QR code on the bottle in order to complete your registration process.\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"The password must be between 6 and 40 characters.\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeBirthDate = this.onChangeBirthDate.bind(this);\r\n    this.onChangeTelegramId = this.onChangeTelegramId.bind(this);\r\n    this.onChangeWalletAddress = this.onChangeWalletAddress.bind(this);\r\n\r\n    /* QR Reading */\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      address: \"\",\r\n      birthDate: \"\",\r\n      telegramId: \"\",\r\n      walletAddress: \"\",\r\n      successful: false,\r\n      qrValue: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n  \r\n\r\n  async componentDidMount() {\r\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\r\n    //console.log(qrValid);\r\n    console.log(qrService.getallowClaim());\r\n    console.log(qrService.getQRClaimed());\r\n    this.setState({ qrValue: qrService.getQRClaimed() });\r\n    //this.setState({ qrValue: qrValid});\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    this.setState({\r\n      firstName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    this.setState({\r\n      lastName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeBirthDate(e) {\r\n    this.setState({\r\n      birthDate: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeTelegramId(e) {\r\n    this.setState({\r\n      telegramId: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeWalletAddress(e) {\r\n    this.setState({\r\n      walletAddress: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.firstName,\r\n        this.state.lastName,\r\n        this.state.address,\r\n        this.state.birthDate,\r\n        this.state.telegramId,\r\n        this.state.walletAddress,\r\n        this.state.qrValue\r\n      ).then(\r\n        (response) => {\r\n          this.props.history.push(\"/app/login\");\r\n          window.location.reload();\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true,\r\n          });\r\n          console.log(response);\r\n          console.log(response.data);\r\n          console.log(response.data.message);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container login-form\">\r\n          <h1>\r\n            You Drink it, You Own it!\r\n            <br />\r\n            <span className=\"subh1\">{i18next.t(\"Register to continue!\")}</span>\r\n            <br />\r\n          </h1>\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <Input\r\n                    type=\"hidden\"\r\n                    className=\"form-control\"\r\n                    name=\"qrCode\"\r\n                    value={this.state.qrValue}\r\n                    validations={[qrCode, required]}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstName\">{i18next.t(\"First Name\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.onChangeFirstName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastName\">{i18next.t(\"Last Name\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.onChangeLastName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"address\">{i18next.t(\"Mailing Address\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"address\"\r\n                    value={this.state.address}\r\n                    onChange={this.onChangeAddress}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"birthDate\">{i18next.t(\"Birthdate\")}</label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    name=\"birthDate\"\r\n                    value={this.state.birthDate}\r\n                    onChange={this.onChangeBirthDate}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"telegramId\">{i18next.t(\"Telegram ID\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"telegramId\"\r\n                    value={this.state.telegramId}\r\n                    onChange={this.onChangeTelegramId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"walletAddress\">{i18next.t(\"DNI/Passport\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"walletAddress\"\r\n                    value={this.state.walletAddress}\r\n                    onChange={this.onChangeWalletAddress}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">{i18next.t(\"Password\")}</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">\r\n                  {i18next.t(\"Register\")}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nconst { REACT_APP_API_URL: API_URL } = process.env;\r\n\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"/all\");\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + \"/app/user\", { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + \"/mod\", { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"/admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\nimport qrService from \"../services/qr.service\";\r\nimport Login from \"./Login\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n      currentUser: { email: \"\" },\r\n      userReady: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //const { history } = this.props;\r\n    //console.log(window.location.pathname);\r\n    //const qrpath = window.location.pathname;\r\n    //const qrpathFormatted = qrpath.replace(/\\\"/g, \"\");\r\n    //if(window.location.href.indexOf(\"MTB18\") > -1 ) {\r\n    //this.redirectTimeout = setTimeout(() => {\r\n    //history.push('/register'+qrpathFormatted)\r\n    //}, 5000);\r\n    //}\r\n    const qrValid = await qrService.checkQR(this.props.match.params.id);\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    if (!currentUser)\r\n      this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n    console.log(qrValid);\r\n    console.log(qrService.getallowClaim());\r\n    console.log(qrService.getQRClaimed());\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n          currentUser: { email: \"\" },\r\n          userReady: false,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n    console.log(this.state.currentUser);\r\n  }\r\n\r\n  render() {\r\n    return <Login />;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport i18next from \"i18next\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { email: \"\" },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    if (!currentUser) this.setState({ redirect: \"/\" });\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n    const { currentToken } = this.state;\r\n    console.log(currentUser);\r\n    return (\r\n      <div>\r\n        <header className=\"jumbotron\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md\">\r\n              <h3>\r\n                <strong>{currentUser.email}</strong>\r\n              </h3>\r\n            </div>\r\n            <div className=\"col-md\">\r\n              <Link to={\"/app/edit-profile\"} className=\"nav-link\">\r\n                <button className=\"btn btn-secondary new-experience-button\">\r\n                  {i18next.t(\"Edit Profile\")}\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {this.state.userReady ? (\r\n          <div className=\"container profile-card\">\r\n            {/* <p>\r\n              <strong>Token:</strong> {currentToken.substring(0, 20)}{\" \"}\r\n              ...{\" \"}\r\n              {currentToken.substr(\r\n                currentToken.length - 20\r\n              )}\r\n            </p> */}\r\n            <p>\r\n              <strong>{i18next.t(\"Id\")}:</strong> {currentUser.id}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"Email\")}:</strong> {currentUser.email}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"First Name\")}:</strong> {currentUser.firstName}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"Last Name\")}:</strong> {currentUser.lastName}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"Mailing Address\")}:</strong> {currentUser.address_1}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"Birthdate\")}:</strong> {currentUser.birthDate}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"Telegram ID\")}:</strong> {currentUser.telegramId}\r\n            </p>\r\n            <p>\r\n              <strong>{i18next.t(\"DNI/Passport\")}:</strong> {currentUser.walletAddress}\r\n            </p>\r\n            {/* <strong>Authorities:</strong>\r\n            <ul>\r\n              {currentUser.roles &&\r\n                currentUser.roles.map((role, index) => (\r\n                  <li key={index}>{role}</li>\r\n                ))}\r\n            </ul> */}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ethers } from \"ethers\";\r\nimport { MinimalForwarder as address } from \"./deploy.json\";\r\nconst abi = [\r\n  {\r\n    inputs: [],\r\n    stateMutability: \"nonpayable\",\r\n    type: \"constructor\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address\",\r\n            name: \"from\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"to\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"value\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"gas\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"nonce\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes\",\r\n            name: \"data\",\r\n            type: \"bytes\",\r\n          },\r\n        ],\r\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\r\n        name: \"req\",\r\n        type: \"tuple\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"signature\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"execute\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    stateMutability: \"payable\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: \"address\",\r\n        name: \"from\",\r\n        type: \"address\",\r\n      },\r\n    ],\r\n    name: \"getNonce\",\r\n    outputs: [\r\n      {\r\n        internalType: \"uint256\",\r\n        name: \"\",\r\n        type: \"uint256\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        components: [\r\n          {\r\n            internalType: \"address\",\r\n            name: \"from\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"address\",\r\n            name: \"to\",\r\n            type: \"address\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"value\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"gas\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"uint256\",\r\n            name: \"nonce\",\r\n            type: \"uint256\",\r\n          },\r\n          {\r\n            internalType: \"bytes\",\r\n            name: \"data\",\r\n            type: \"bytes\",\r\n          },\r\n        ],\r\n        internalType: \"struct MinimalForwarder.ForwardRequest\",\r\n        name: \"req\",\r\n        type: \"tuple\",\r\n      },\r\n      {\r\n        internalType: \"bytes\",\r\n        name: \"signature\",\r\n        type: \"bytes\",\r\n      },\r\n    ],\r\n    name: \"verify\",\r\n    outputs: [\r\n      {\r\n        internalType: \"bool\",\r\n        name: \"\",\r\n        type: \"bool\",\r\n      },\r\n    ],\r\n    stateMutability: \"view\",\r\n    type: \"function\",\r\n  },\r\n];\r\n\r\nexport function createInstance(provider) {\r\n  return new ethers.Contract(address, abi, provider);\r\n}\r\n","import { ethers } from \"ethers\";\r\nimport { createInstance } from \"./forwader\";\r\n\r\nimport { signMetaTxRequest } from \"./signer\";\r\nasync function gasLessMint(contract, provider, signer, uri) {\r\n  const url = process.env.REACT_APP_WEBHOOK_URL;\r\n  if (!url) throw new Error(`Missing relayer url`);\r\n\r\n  const forwarder = createInstance(provider);\r\n  const from = await signer.getAddress();\r\n  // const from = \"0xD71b6cF4517bF60279a7d1bda4bA781631E12d7d\";\r\n  const data = contract.interface.encodeFunctionData(\"safeMint\", [from, uri]);\r\n  const to = contract.address;\r\n\r\n  const request = await signMetaTxRequest(signer.provider, forwarder, {\r\n    uri,\r\n    to,\r\n    from,\r\n    data,\r\n  });\r\n\r\n  console.log(request);\r\n\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(request),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n}\r\n\r\nexport async function registerMint(contract, provider, data) {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID;\r\n\r\n  try {\r\n    if (!data) throw new Error(`Name cannot be empty`);\r\n    if (!window.ethereum) throw new Error(`User wallet not found`);\r\n\r\n    // Verificar si el usuario ya ha dado permiso\r\n    const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n    if (accounts.length === 0) {\r\n      // El usuario no ha dado permiso, esperar confirmación\r\n      await requestPermissionAndRetry();\r\n    }\r\n\r\n    const userProvider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const userNetwork = await userProvider.getNetwork();\r\n\r\n    if (userNetwork.chainId !== Number(chainId)) {\r\n      // El usuario no está en la red correcta, esperar cambio de red\r\n      await switchToCorrectNetwork();\r\n    }\r\n\r\n    const signer = userProvider.getSigner();\r\n    const from = await signer.getAddress();\r\n    const balance = await provider.getBalance(from);\r\n\r\n    const response = await gasLessMint(contract, provider, signer, data);\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    throw new Error(error.message);\r\n  }\r\n}\r\nasync function requestPermissionAndRetry() {\r\n  try {\r\n    // Intentar habilitar Ethereum y esperar la confirmación del usuario\r\n    await window.ethereum.enable();\r\n  } catch (error) {\r\n    // Manejar el error si el usuario no otorga permiso\r\n    console.error(\"User denied permission:\", error);\r\n    throw new Error(\"denied\");\r\n    // Puedes decidir cómo manejar esta situación, por ejemplo, mostrar un mensaje al usuario y volver a intentar después de un tiempo\r\n  }\r\n}\r\nasync function switchToCorrectNetwork() {\r\n  try {\r\n    const switchNetworkResult = await window.ethereum.request({\r\n      method: \"wallet_switchEthereumChain\",\r\n      params: [{ chainId: process.env.REACT_APP_NETWORK_TARGET_ID }],\r\n    });\r\n\r\n    if (switchNetworkResult) {\r\n      // La red se ha cambiado exitosamente.\r\n      // Puedes continuar con el proceso.\r\n    } else {\r\n      // El usuario canceló o hubo un error al cambiar de red.\r\n      throw new Error(\"Network switch canceled or failed.\");\r\n    }\r\n  } catch (error) {\r\n    addNetwork();\r\n\r\n    // handle \"add\" error\r\n    console.log(\"Error switching network:\", error);\r\n    // Puedes decidir cómo manejar esta situación, por ejemplo, mostrar un mensaje al usuario y volver a intentar después de un tiempo\r\n  }\r\n}\r\n\r\nexport async function addNetwork() {\r\n  try {\r\n    await window.ethereum.request({\r\n      method: \"wallet_addEthereumChain\",\r\n      params: [\r\n        {\r\n          chainId: process.env.REACT_APP_NETWORK_TARGET_ID,\r\n          chainName: process.env.REACT_APP_NETWORK_NAME,\r\n          rpcUrls: [process.env.REACT_APP_NETWORK_RPC] /* ... */,\r\n        },\r\n      ],\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import { ethers } from \"ethers\";\r\nimport { Registry as address } from \"./deploy.json\";\r\nimport NFTContractBuild from \"../contract/YDIYOI.json\";\r\n\r\nconst abi = NFTContractBuild.abi;\r\n\r\nexport function createInstance(provider) {\r\n  return new ethers.Contract(address, abi, provider);\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { ethers } from \"ethers\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nconst MAIN_ENDPOINT = process.env.REACT_APP_MAIN_ENDPOINT;\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\r\nexport function createProvider() {\r\n  let provider = new ethers.providers.JsonRpcProvider(\r\n    MAIN_ENDPOINT,\r\n    Number(CHAIN_ID)\r\n  );\r\n  return provider;\r\n}\r\n","import Web3 from \"web3\";\r\n\r\nimport NFTContractBuild from \"../src/contract/YDIYOI.json\";\r\nimport dotenv from \"dotenv\";\r\nimport { registerMint } from \"./eth/mintNFT\";\r\nimport { createInstance } from \"./eth/Ydiyoi\";\r\nimport { createProvider } from \"./eth/provider\";\r\n\r\ndotenv.config();\r\nlet token_uri = localStorage.getItem(\"ipfsURL\");\r\n\r\nlet selectedAccount;\r\n\r\nlet SimpleCollectible;\r\nlet web3;\r\nlet isInitialized = false;\r\nlet provider;\r\nconst { REACT_APP_CONTRACT_ADDRESS, REACT_APP_NETWORK_TARGET_ID } = process.env;\r\n\r\nexport const init = async () => {\r\n  provider = window.ethereum;\r\n\r\n  if (typeof provider !== \"undefined\") {\r\n    // Metamask is installed\r\n    provider\r\n      .request({ method: \"eth_requestAccounts\" })\r\n      .then((accounts) => {\r\n        selectedAccount = accounts[0];\r\n        console.log(\"Selected account is \", { selectedAccount });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return;\r\n      });\r\n    // Account is changed Logic\r\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\r\n      selectedAccount = accounts[0];\r\n      console.log(\"Selected account changed to \", { selectedAccount });\r\n    });\r\n  }\r\n\r\n  web3 = new Web3(provider);\r\n\r\n  // const networkId = await web3.eth.net.getId();\r\n\r\n  // // Smart contract declare + contract address\r\n  // SimpleCollectible = new web3.eth.Contract(\r\n  //   NFTContractBuild.abi,\r\n  //   ([networkId].addressCon = REACT_APP_CONTRACT_ADDRESS)\r\n  // );\r\n\r\n  isInitialized = true;\r\n};\r\n\r\n// // Function to be called from App.js\r\nexport const mintToken = async () => {\r\n  if (!isInitialized) {\r\n    await init();\r\n  }\r\n\r\n  const provider2 = createProvider();\r\n  const contract = createInstance(provider2);\r\n\r\n  return await registerMint(contract, provider2, token_uri);\r\n\r\n  // if (!isInitialized) {\r\n  //   await init();\r\n  // }\r\n  // console.log(selectedAccount);\r\n  // // We pass the NFT link (token_uri), going to need to make a request to get that link from API.\r\n  // return SimpleCollectible.methods\r\n  //   .safeMint(selectedAccount, token_uri)\r\n  //   .send({ from: selectedAccount });\r\n};\r\n\r\n// Function to clear complete cache data\r\n// const clearCacheData = () => {\r\n//   caches.keys().then((names) => {\r\n//     names.forEach((name) => {\r\n//       caches.delete(name);\r\n//     });\r\n//   });\r\n//   // alert('Complete Cache Cleared')\r\n// };\r\n\r\n// switches network to the one provided\r\nexport const switchNetwork = async () => {\r\n  try {\r\n    await window.ethereum.request({\r\n      method: \"wallet_switchEthereumChain\",\r\n      params: [{ chainId: process.env.REACT_APP_NETWORK_TARGET_ID }],\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    return \"NoWallet\";\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport ExperienceService from \"../services/experience.service\";\r\nimport { mintToken, switchNetwork } from \"../Web3Client\";\r\nimport { create } from \"ipfs-http-client\";\r\nimport i18next from \"i18next\";\r\nimport { createInstance } from \"../eth/Ydiyoi\";\r\nimport { createProvider } from \"../eth/provider\";\r\nimport { addNetwork } from \"../eth/mintNFT\";\r\n/* Create an instance of the client */\r\nconst client = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n      userReady: false,\r\n      currentUser: { email: \"\" },\r\n      // experiencesCount: \"\",\r\n      experiences: [],\r\n      currentExperiences: [],\r\n      minted: false,\r\n      experienceId: \"\",\r\n      ipfsUrl: \"\",\r\n      redirect: null,\r\n      alert: null,\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    if (!currentUser) {\r\n      this.setState({ redirect: \"/\" });\r\n    } else {\r\n      this.setState({ userId: currentUser.id });\r\n      const currentExperiences = await ExperienceService.getExperiences(\r\n        currentUser.id\r\n      );\r\n      this.setState({\r\n        currentExperiences: currentExperiences,\r\n      });\r\n    }\r\n\r\n    if (window.ethereum === undefined) {\r\n      this.setState({\r\n        alert: i18next.t(\"No wallet\"),\r\n      });\r\n    }\r\n\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n    await ExperienceService.getExperiences(currentUser.id).then(\r\n      (response) => {\r\n        this.setState({\r\n          experiences: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          experiences:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n\r\n    // console.log(this.state.experiences);\r\n  }\r\n\r\n  // Mint Function\r\n\r\n  async createCollectible(index) {\r\n    console.log(this.state.experiences[index].ipfsUrl);\r\n    try {\r\n      const url = this.state.experiences[index].ipfsUrl;\r\n      const finalURL = await url.replace(\"ipfs.infura.io\", \"ipfs.io\");\r\n      console.log(finalURL);\r\n      this.setState({\r\n        nftGenerated: true,\r\n        experienceId: this.state.experiences[index].id,\r\n      });\r\n      // Added IPFS URL to LocalStorage.\r\n      localStorage.setItem(\"ipfsURL\", this.state.experiences[index].ipfsUrl);\r\n      // console.log(this.state.ipfsUrlJSON);\r\n      // console.log(this.state.nftGenerated);\r\n      const provider = createProvider();\r\n      const contract = createInstance(provider);\r\n\r\n      try {\r\n        await mintToken(contract, provider, finalURL)\r\n          .then((tx) => {\r\n            console.log(tx);\r\n            this.setState({\r\n              minted: true,\r\n            });\r\n            //  Removed IPFS from LocalStorage after success minting\r\n            ExperienceService.updateExperience(\r\n              this.state.experienceId,\r\n              this.state.nftGenerated,\r\n              this.state.currentUser.id\r\n            ).then(() => {\r\n              window.location.reload();\r\n            });\r\n            // console.log(this.state.nftGenerated);\r\n            // The following line fixes experiencie not matching minting bug\r\n            localStorage.removeItem(\"ipfsURL\");\r\n          })\r\n          .catch((err) => {\r\n            // const url = \"\";\r\n            // const added = \"\"\r\n            console.log(err.message);\r\n\r\n            this.setState({\r\n              errorMessage:\r\n                err.message + \"Please try again later or refresh this page\",\r\n            });\r\n\r\n            // console.log(url);\r\n            // console.log(added);\r\n            // localStorage.removeItem(\"ipfsURL\");\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error uploading file: \", error);\r\n      //localStorage.removeItem(\"ipfsURL\");\r\n      const finalURL = \"\";\r\n      const added = \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      // return <Redirect to={this.state.redirect} />;\r\n    }\r\n\r\n    const listItems = this.state.experiences.map((item, index) => (\r\n      <tr key={item.id}>\r\n        <td>{item.date}</td>\r\n        <td>{item.wine.name}</td>\r\n        <td>{item.wine.qrValue.slice(0, item.wine.qrValue.length - 6)}</td>\r\n        {/* <td>{i18next.t(\"Coming Soon\")}</td> */}\r\n        <td>\r\n          {!item.nftGenerated ? (\r\n            <button\r\n              tabIndex={index}\r\n              value={index}\r\n              className=\"btn-primary btn\"\r\n              // onClick with index of the experience for create JSON file and upload to IPFS\r\n              onClick={() => this.createCollectible(index)}\r\n            >\r\n              {i18next.t(\"Mint NFT\")}\r\n            </button>\r\n          ) : (\r\n            <p>{i18next.t(\"NFT Minted Succesfully!\")}</p>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.alert && (\r\n          <div className=\"center alert-danger\">\r\n            <p className=\"\"> {this.state.alert}</p>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"row info-message\">\r\n          <div className=\"col-md\">\r\n            <p>\r\n              <i className=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n              {i18next.t(\r\n                \"Minting is currently available only on ETH Mainnet. Check your Network on Metamask\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <header className=\"jumbotron\" id=\"jumbotron-userboard\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md\">\r\n              <h3>{i18next.t(\"Tastings\")}</h3>\r\n            </div>\r\n            <div className=\"col-md\">\r\n              <Link to={\"/app/add-tasting\"} className=\"nav-link\">\r\n                <button className=\"btn btn-secondary new-experience-button\">\r\n                  {i18next.t(\"New Tasting\")}\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"container tastings-card\">\r\n          <div className=\"table-responsive-sm\">\r\n            {this.state.errorMessage && (\r\n              <div className=\"center alert-danger\">\r\n                <p className=\"\">{this.state.errorMessage}</p>\r\n              </div>\r\n            )}\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">{i18next.t(\"Date\")}</th>\r\n                  <th scope=\"col\">{i18next.t(\"Token\")}</th>\r\n                  <th scope=\"col\">{i18next.t(\"Token ID\")}</th>\r\n                  <th scope=\"col\">{i18next.t(\"Actions\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{listItems}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport i18next from \"i18next\";\r\n\r\n\r\nexport default class EditProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n    this.onChangeLastName = this.onChangeLastName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeBirthday = this.onChangeBirthday.bind(this);\r\n    this.onChangeTelegram = this.onChangeTelegram.bind(this);\r\n    this.onChangeWalletAddress = this.onChangeWalletAddress.bind(this);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { email: \"\" },\r\n      userId: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      telegramId: '',\r\n      birthDate: '',\r\n      address: '',\r\n      walletAddress: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n    // const currentToken = AuthService.getToken();\r\n    if (!currentUser) this.setState({ redirect: \"/\" });\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ userId: currentUser.id });\r\n    this.setState({ firstName: currentUser.firstName})\r\n    this.setState({ lastName: currentUser.lastName})\r\n    this.setState({ telegramId: currentUser.telegramId})\r\n    this.setState({ birthDate: currentUser.birthDate})\r\n    this.setState({ address: currentUser.address})\r\n    this.setState({ walletAddress: currentUser.walletAddress})\r\n  }\r\n\r\n  onChangeFirstName(e) {\r\n    this.setState({\r\n      firstName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeLastName(e) {\r\n    this.setState({\r\n      lastName: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeBirthday(e) {\r\n    this.setState({\r\n      birthDate: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeTelegram(e) {\r\n    this.setState({\r\n      telegramId: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeWalletAddress(e) {\r\n    this.setState({\r\n      walletAddress: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.update(\r\n        this.state.userId,\r\n        this.state.firstName,\r\n        this.state.lastName,\r\n        this.state.telegramId,\r\n        this.state.birthDate,\r\n        this.state.address,\r\n        this.state.walletAddress,\r\n      ).then(\r\n        (response) => {\r\n          //this.props.history.push(\"/app/edit-profile\");\r\n          //window.location.reload();\r\n          console.log(response);\r\n          this.setState({\r\n            message: response,\r\n            successful: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n    // const { currentToken } = this.state;\r\n    //console.log(this.state.firstName);\r\n  \r\n\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <header className=\"jumbotron\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md\">\r\n              <h3>\r\n                <strong>{currentUser.email}</strong> {i18next.t(\"Edit Profile\")}\r\n              </h3>\r\n            </div>\r\n            <div className=\"col-md\">\r\n              <Link to={\"/app/profile\"} className=\"nav-link\">\r\n                <button className=\"btn btn-secondary new-experience-button\">\r\n                {i18next.t(\"Back to Profile\")}\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {this.state.userReady ? (\r\n          <div className=\"container profile-card\">\r\n            <Form\r\n              onSubmit={this.handleUpdate}\r\n              ref={(c) => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n              {!this.state.successful && (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">{i18next.t(\"First Name\")}</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"firstName\"\r\n                      value={this.state.firstName}\r\n                      placeholder={this.state.firstName}\r\n                      onChange={this.onChangeFirstName}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">{i18next.t(\"Last Name\")}</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"lastName\"\r\n                      value={this.state.lastName}\r\n                      placeholder={this.state.lastName}\r\n                      onChange={this.onChangeLastName}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"address\">{i18next.t(\"Mailing Address\")}</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"address\"\r\n                      value={this.state.address}\r\n                      placeholder={this.state.address_1}\r\n                      onChange={this.onChangeAddress}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"birthDate\">{i18next.t(\"Birthdate\")}</label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      name=\"birthDate\"\r\n                      value={this.state.birthDate}\r\n                      placeholder={this.state.birthDate}\r\n                      onChange={this.onChangeBirthday}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"telegramId\">{i18next.t(\"Telegram ID\")}</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"telegramId\"\r\n                      value={this.state.telegramId}\r\n                      placeholder={this.state.telegramId}\r\n                      onChange={this.onChangeTelegram}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"walletAddress\">{i18next.t(\"DNI/Passport\")}</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"walletAddress\"\r\n                      value={this.state.walletAddress}\r\n                      placeholder={this.state.walletAddress}\r\n                      onChange={this.onChangeWalletAddress}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary btn-block\">\r\n                    {i18next.t(\"Update\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {this.state.message && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\r\n                      this.state.successful\r\n                        ? \"alert alert-success\"\r\n                        : \"alert alert-danger\"\r\n                    }\r\n                    role=\"alert\"\r\n                  >\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  this.checkBtn = c;\r\n                }}\r\n              />\r\n            </Form>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SingleExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { email: \"\" }    \r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n   \r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n    console.log(currentUser);\r\n    return (\r\n      <div>\r\n        <header className=\"jumbotron\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md\">\r\n              <h3>Experience ID {currentUser.id}</h3>\r\n            </div>\r\n            <div className=\"col-md\">\r\n              <Link to={\"/app/user\"} className=\"nav-link\">\r\n                <button className=\"btn btn-secondary new-experience-button\">\r\n                  Back to Experiences\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {this.state.userReady ? (\r\n          <div className=\"container profile-card\">\r\n            <p>\r\n              <strong>QR Code:</strong>{\" \"}\r\n              {currentUser.token.substring(0, 20)} ...{\" \"}\r\n              {currentUser.token.substr(\r\n                currentUser.token.length - 20\r\n              )}\r\n            </p>\r\n            <p>\r\n              <strong>Date:</strong> 24/02/2020\r\n            </p>\r\n            <p>\r\n              <strong>Tokens:</strong> 1\r\n            </p>\r\n            <p>\r\n              <strong>Status:</strong> Pending\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport i18next from \"i18next\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        {i18next.t(\"This field is required!\")}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      currentUser: { email: \"\" },\r\n      userReady: false,\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  //   async componentDidMount() {\r\n\r\n  //   }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.resetPassword(this.state.email).then(\r\n        (response) => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.error.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n            successful: false,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n        successful: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container login-form\">\r\n          <h1>\r\n            {i18next.t(\"Reset your password\")}\r\n            {/* <span className=\"subh1\">You will receive an email with instructions</span> */}\r\n          </h1>\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">{i18next.t(\"Email\")}</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required]}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-group\"></div>\r\n                  <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={this.state.loading}\r\n                  >\r\n                    {this.state.loading && (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    <span>{i18next.t(\"Reset password\")}</span>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ForgotPassword);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport qrService from \"../services/qr.service\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\nclass UpdatePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n      userReady: false,\r\n      resetkey: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //const qrValid = await qrService.checkQR(this.props.match.params.id);\r\n    //qrService.checkQR(this.props.match.params.id);\r\n    //console.log(qrValid);\r\n    //console.log(qrService.getallowClaim());\r\n    //console.log(qrService.getQRClaimed());\r\n    qrService.getallowClaim();\r\n    qrService.getQRClaimed();\r\n    const searchParams = window.location.search;\r\n    const params = new URLSearchParams(searchParams)\r\n    const reset = params.get('resetKey')\r\n    this.setState({ resetkey: reset})\r\n    //this.setState({ qrValue: qrValid});\r\n    const currentUser = AuthService.getCurrentUser();\r\n    const currentToken = AuthService.getToken();\r\n    if (!currentUser)\r\n    this.setState({ currentUser: currentUser, userReady: true });\r\n    this.setState({ currentToken: currentToken, userReady: true });\r\n    \r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeConfirmPassword(e) {\r\n    this.setState({\r\n      confirmPassword: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.updatePassword(this.state.resetkey, this.state.password, this.state.confirmPassword).then(\r\n        () => {\r\n          this.props.history.push(\"/app/add-experience\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.error.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage ,\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container login-form\">\r\n          <h1>\r\n            Reset your password\r\n            <br />\r\n            <span className=\"subh1\">Update and confirm your new password</span>\r\n          </h1>\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Confirm Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.confirmPassword}\r\n                onChange={this.onChangeConfirmPassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\"><div className=\"form-group\"></div>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Update Password</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UpdatePassword);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport logo from \"./assets/images/website-logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/UserBoard\";\r\nimport BoardModerator from \"./components/ModBoard\";\r\nimport BoardAdmin from \"./components/AdminBoard\";\r\nimport NewExperience from \"./components/NewExperience\";\r\nimport EditProfile from \"./components/EditProfile\";\r\nimport SingleExperience from \"./components/SingleExperience\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport UpdatePassword from \"./components/UpdatePassword\";\r\nimport i18next from \"i18next\";\r\nimport i18n from \"./i18n\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport Select from \"react-validation/build/select\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n    this.redirectTimeout = null;\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n      test: \"\",\r\n      value: \"en\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        //showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        //showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    console.log(\"selected val is \", event.target.value);\r\n    let newlang = event.target.value;\r\n    this.setState((prevState) => ({ value: newlang }));\r\n    console.log(\"state value is\", newlang);\r\n    this.props.i18n.changeLanguage(newlang);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"Polygon Version\");\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n    const changeLanguage = (lng) => {\r\n      i18n.changeLanguage(lng);\r\n    };\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand\" id=\"top-header\">\r\n          <div className=\"language-selector\">\r\n            <li className=\"nav-item\">\r\n              <button className=\"item\" onClick={() => changeLanguage(\"es\")}>\r\n                ES\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">|</li>\r\n            <li className=\"nav-item\">\r\n              <button className=\"item\" onClick={() => changeLanguage(\"en\")}>\r\n                EN\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">|</li>\r\n\r\n            <li className=\"nav-item\">\r\n              <button className=\"item\" onClick={() => changeLanguage(\"fr\")}>\r\n                FR\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">|</li>\r\n\r\n            <li className=\"nav-item\">\r\n              <button className=\"item\" onClick={() => changeLanguage(\"cat\")}>\r\n                CAT\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\">|</li>\r\n\r\n            <li className=\"nav-item\">\r\n              <button className=\"item\" onClick={() => changeLanguage(\"pr\")}>\r\n                PR\r\n              </button>\r\n            </li>\r\n          </div>\r\n        </nav>\r\n        <nav className=\"navbar navbar-expand\" id=\"header\">\r\n          <Link to={\"#\"} className=\"navbar-brand\">\r\n            <img alt=\"logo\" className=\"logo-header\" src={logo} />\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto mobile-nav\">\r\n            {/* <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li> */}\r\n            {showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/app/mod\"} className=\"nav-link\">\r\n                  Winery Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/app/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item btn-secondary tasting\">\r\n                <Link to={\"/app/user\"} className=\"nav-link\">\r\n                  {i18next.t(\"Tastings\")}\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto mobile-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/app/profile\"} className=\"nav-link\">\r\n                  <i className=\"far fa-user-circle\"></i> {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/app/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  <i className=\"fas fa-power-off\"></i>\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/app/login\"} className=\"nav-link\">\r\n                  <button className=\"btn btn-primary btn-block\">\r\n                    {i18next.t(\"Login\")}\r\n                  </button>\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/app/register\"} className=\"nav-link\">\r\n                  <button className=\"btn btn-secondary btn-block\">\r\n                    {i18next.t(\"Register\")}\r\n                  </button>\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={\"/\"} component={Home} />\r\n            <Route exact path={\"/:id\"} component={Home} />\r\n            <Route exact path=\"/app/login\" component={Login} />\r\n            <Route exact path=\"/app/login/:id\" component={Login} />\r\n            <Route exact path=\"/app/register/:id\" component={Register} />\r\n            <Route exact path=\"/app/register\" component={Register} />\r\n            <Route exact path=\"/app/profile\" component={Profile} />\r\n            <Route path=\"/app/user\" component={BoardUser} />\r\n            <Route path=\"/app/mod\" component={BoardModerator} />\r\n            <Route path=\"/app/admin\" component={BoardAdmin} />\r\n            <Route path=\"/app/add-tasting\" component={NewExperience} />\r\n            <Route path=\"/app/edit-profile\" component={EditProfile} />\r\n            <Route path=\"/app/single-tasting\" component={SingleExperience} />\r\n            <Route path=\"/app/forgot-password\" component={ForgotPassword} />\r\n            <Route\r\n              exact\r\n              path=\"/app/update-password\"\r\n              component={UpdatePassword}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withTranslation()(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport i18n from \"./i18n\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <I18nextProvider i18n={i18n}>\r\n      <App />\r\n    </I18nextProvider>\r\n    ,\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}